[{"C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\index.js":"1","C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\reportWebVitals.js":"2","C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\App.jsx":"3","C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\components\\Table\\Table.jsx":"4","C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\components\\Table\\Pagination.jsx":"5","C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\utils\\FetchDataApi.js":"6"},{"size":528,"mtime":1607693281545,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":237,"mtime":1607700497890,"results":"10","hashOfConfig":"8"},{"size":3440,"mtime":1608201994607,"results":"11","hashOfConfig":"8"},{"size":437,"mtime":1607693605944,"results":"12","hashOfConfig":"8"},{"size":264,"mtime":1608201857307,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1p5shke",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\index.js",[],["29","30"],"C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\reportWebVitals.js",[],"C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\App.jsx",[],"C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\components\\Table\\Table.jsx",["31","32","33"],"import React, { useEffect, useState } from \"react\";\r\nimport { DataTable } from \"lucid-ui\";\r\nimport _ from \"lodash\";\r\nimport \"../../style/Table.scss\";\r\nimport Pagination from \"./Pagination\";\r\nimport FetchDataApi from \"../../utils/FetchDataApi\";\r\n\r\nconst Table = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const jsonColumn = [\r\n    { col: \"id\", width: \"150\" },\r\n    { col: \"name\", width: \"100\" },\r\n    { col: \"email\", width: \"150\" },\r\n    { col: \"gender\", width: \"100\" },\r\n    { col: \"status\", width: \"150\" },\r\n  ];\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeIndex, setActiveIndex] = useState(1);\r\n  const [currentlySortedField, setCurrentlySortedField] = useState(\"id\");\r\n  const [\r\n    currentlySortedFieldDirection,\r\n    setCurrentlySortedFieldDirection,\r\n  ] = useState(\"desc\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage, setUsersPerPage] = useState(10);\r\n\r\n  // Fetching data from API\r\n  useEffect(async () => {\r\n    const fetchData = await FetchDataApi();\r\n    if (fetchData) {\r\n      setLoading(false);\r\n      setUsers(fetchData);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n    // fetchData ? setUsers(fetchData) : setLoading(true);\r\n  }, [setUsers, setLoading]);\r\n\r\n  const handleRowClick = (item, rowIndex) => {\r\n    setActiveIndex(rowIndex);\r\n  };\r\n\r\n  // Handling sorting.\r\n  const handleSorting = (field) => {\r\n    const nextCurrentlySortedFieldDirection =\r\n      currentlySortedField === field && currentlySortedFieldDirection === \"asc\"\r\n        ? \"desc\"\r\n        : \"asc\";\r\n    const nextData = _.sortBy(users, field);\r\n\r\n    setCurrentlySortedField(field);\r\n    setCurrentlySortedFieldDirection(nextCurrentlySortedFieldDirection);\r\n    setUsers(\r\n      nextCurrentlySortedFieldDirection === \"desc\"\r\n        ? nextData\r\n        : _.reverse(nextData)\r\n    );\r\n    setActiveIndex(null);\r\n  };\r\n\r\n  //Getting current users\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  // Changing the page\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"datatable-wrapper\">\r\n      {loading ? (\r\n        <span className=\"noData-wrapper\">\r\n          Please Hold on, fetching data may take some time...\r\n        </span>\r\n      ) : (\r\n        <DataTable\r\n          data={_.map(currentUsers, (row, index) =>\r\n            index === activeIndex ? { ...row, isActive: true } : row\r\n          )}\r\n          isActionable\r\n          density=\"extended\"\r\n          onRowClick={handleRowClick}\r\n          onSort={handleSorting}\r\n        >\r\n          {_.map(jsonColumn, (row, i) => {\r\n            return (\r\n              <DataTable.Column\r\n                className=\"column-wrapper\"\r\n                field={`${row.col}`}\r\n                align=\"left\"\r\n                width={`${row.width}`}\r\n                align=\"left\"\r\n                hasBorderLeft\r\n                isSortable\r\n                key={i}\r\n              >\r\n                {_.upperCase(row.col)}\r\n              </DataTable.Column>\r\n            );\r\n          })}\r\n        </DataTable>\r\n      )}\r\n\r\n      <div>\r\n        <Pagination\r\n          usersPerPage={usersPerPage}\r\n          totalUsers={users.length}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\components\\Table\\Pagination.jsx",[],["34","35"],"C:\\Users\\Deepthi\\Desktop\\task2-10nov2020\\src\\utils\\FetchDataApi.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":25,"column":24,"nodeType":"42","messageId":"43","endLine":25,"endColumn":39},{"ruleId":"44","severity":1,"message":"45","line":28,"column":13,"nodeType":"46","endLine":37,"endColumn":4},{"ruleId":"47","severity":1,"message":"48","line":94,"column":17,"nodeType":"49","endLine":94,"endColumn":29},{"ruleId":"36","replacedBy":"50"},{"ruleId":"38","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'setUsersPerPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["52"],["53"],"no-global-assign","no-unsafe-negation"]